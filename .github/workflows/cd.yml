#scrpt de desarrollo para CD dentro de la aplicación

name: CD
on:
  push: 
    branches:
      - development

env:
  AWS_REGION: us-east-1
  AWS_LIGHTSAIL_SERVICE_NAME: wizeq-dev

jobs:
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    environment: dev
    # needs: [lint, typecheck, vitest, cypress]
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    env:
      NODE_ENV: production

    steps:
      - name: 🛑 Cancel Previous Runs
        if: ${{ env.GITHUB_ACTOR != 'nektos/act' }}
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: Prepare Server For Build
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_IP }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            rm -rf ~/itesm-socioformador-ene-feb-2023-equipo-2/tmp
            mkdir -p ~/itesm-socioformador-ene-feb-2023-equipo-2/tmp

      - name: Copy Files To Lightsail Instance
        uses: wlixcc/SFTP-Deploy-Action@v1.0
        with:
          username: ${{ secrets.LIGHTSAIL_USER }}
          server: ${{ secrets.LIGHTSAIL_IP }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          local_path: "./*"
          remote_path: "D:/Documentos/Sexto Semestre/Desarrollo e implementacion de software/itesm-socioformador-ene-feb-2023-equipo-2/tmp"
          args: "-o ConnectTimeout=60"

      - name: Configure Server
        uses: appleboy/ssh-action@master
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          PORT: ${{ secrets.PORT }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          AUTH0_SECRET: ${{ secrets.AUTH0_SECRET }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          NEXT_PUBLIC_API_KEY: ${{ secrets.NEXT_PUBLIC_API_KEY }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL}}
          AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL}}
          AUTH0_ISSUER_BASE_URL: ${{ secrets.AUTH0_ISSUER_BASE_URL}}
          AUTH0_TOKEN: ${{ secrets.AUTH0_TOKEN }}

        with:
          timeout: 60s
          command_timeout: 30m
          envs: BASE_URL,PORT,DATABASE_URL,AUTH0_DOMAIN,AUTH0_SECRET,AUTH0_CLIENT_ID,AUTH0_CLIENT_SECRET,NEXT_PUBLIC_API_KEY,NEXT_PUBLIC_API_URL,AUTH0_BASE_URL,AUTH0_ISSUER_BASE_URL,AUTH0_TOKEN
          host: ${{ secrets.LIGHTSAIL_IP }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            # ignore failure on pm2 stop (first time?)

            echo "* Step: * Replace app folders"
            rm -rf ~/itesm-socioformador-ene-feb-2023-equipo-2/app
            mkdir -p ~/itesm-socioformador-ene-feb-2023-equipo-2/app
            cp -R ~/itesm-socioformador-ene-feb-2023-equipo-2/tmp/. ~/itesm-socioformador-ene-feb-2023-equipo-1/app/
            cd ~/itesm-socioformador-ene-feb-2023-equipo-2/app

            echo "* Step: * Create .env file"
            echo BASE_URL="$BASE_URL" >> .env
            echo PORT="$PORT" >> .env
            echo DATABASE_URL="$DATABASE_URL" >> .env
            echo AUTH0_DOMAIN="$AUTH0_DOMAIN" >> .env
            echo AUTH0_SECRET="$AUTH0_SECRET" >> .env
            echo AUTH0_CLIENT_ID="$AUTH0_CLIENT_ID" >> .env
            echo AUTH0_CLIENT_SECRET="$AUTH0_CLIENT_SECRET" >> .env
            echo NEXT_PUBLIC_API_KEY="$NEXT_PUBLIC_API_KEY" >> .env
            echo NEXT_PUBLIC_API_URL="$NEXT_PUBLIC_API_URL" >> .env
            echo AUTH0_BASE_URL="$AUTH0_BASE_URL" >> .env
            echo AUTH0_ISSUER_BASE_URL="$AUTH0_ISSUER_BASE_URL" >> .env
            echo AUTH_TOKEN="$AUTH_TOKEN" >> .env


            

            

            echo "* Step: * npm ci and build"
            npm ci # install
            npm run build

            echo "* Step: ** Cleanup"
            rm -rf ~/projectlab/tmp
